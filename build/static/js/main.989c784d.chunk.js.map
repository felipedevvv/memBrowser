{"version":3,"sources":["components/form.js","components/disclaimer.js","components/message.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","inputs","marginBottom","heading","Form","useState","mem","setMem","memKey","setMemKey","resMsg","setResMsg","formFilled","setFormFilled","classes","sendMem","e","a","axios","post","content","headers","then","res","console","log","status","catch","err","response","useEffect","className","Card","style","padding","minWidth","Typography","variant","FormControl","id","fullWidth","InputLabel","OutlinedInput","label","size","color","value","onChange","target","multiline","Button","disabled","onClick","display","Disclaimer","maxWidth","href","Message","message","marginTop","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.989c784d.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Card, OutlinedInput, Typography, Button, FormControl, InputLabel } from '@material-ui/core';\n// Checkbox, FormControlLabel\n// import DateFnsUtils from '@date-io/date-fns';\n// import { DateTimePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport axios from 'axios';\n\n\nconst useStyles = makeStyles((theme) => ({\n\n\tinputs: {\n\t\tmarginBottom: 20\n\t},\n    heading: {\n        marginBottom: 10\n    }\n}));\n\nconst Form = () => {\n  const [mem, setMem] = useState(\"\");\n  const [memKey, setMemKey] = useState(\"\");\n  const [resMsg, setResMsg] = useState(\"\");\n//   const [isScheduled, setIsScheduled] = useState(false);\n  const [formFilled, setFormFilled] = useState(false);\n  const classes = useStyles();\n\n  const sendMem = async (e) => {\n\n    axios.post('https://api.mem.ai/v0/mems', {\n        content: mem\n    }, {\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `ApiAccessToken ${memKey}`\n        }\n    }).then(res => {\n        setMem(\"\");\n        setMemKey(\"\");\n        setFormFilled(false);\n\n        console.log(res.status);\n    }).catch(err => {\n        console.log(err.response.status)\n    })\n    \n  };\n\n  useEffect(() => {\n    setFormFilled(memKey !== \"\" && mem !== \"\");\n}, [mem, memKey]);\n\n  return (\n    <div className=\"App\">\n      {/* <header className=\"App-header\">\n      </header> */}\n        <Card style={{ padding: 30, minWidth: 400 }}>\n            <Typography variant=\"h6\" className={classes.heading}>\n                Mem from anywhere!\n            </Typography>\n            <FormControl id=\"form-key\" fullWidth variant=\"outlined\">\n                \n                <InputLabel>\n                    API Key\n                </InputLabel>\n                <OutlinedInput \n                    id=\"mem-key\" \n                    label=\"Mem Key\" \n                    variant=\"outlined\" \n                    size=\"small\"\n                    color=\"primary\"\n                    value={memKey}\n                    className={classes.inputs}\n                    onChange={(e) => {\n                        setMemKey(e.target.value);\n                        setResMsg(\"\");\n                    }}\n                />\n            </FormControl>\n            <FormControl id=\"form-mem\" fullWidth variant=\"outlined\">\n                <InputLabel>\n                    Mem\n                </InputLabel>\n                <OutlinedInput \n                    id=\"mem-text\" \n                    label=\"Mem\" \n                    variant=\"outlined\" \n                    multiline={true}\n                    size=\"small\"\n                    color=\"primary\"\n                    value={mem}\n                    className={classes.inputs}\n                    onChange={(e) => {\n                        setMem(e.target.value);\n                        setResMsg(\"\");\n                    }}\n                />\n                {/* <FormControlLabel\n                    control={\n                        <Checkbox\n                            label=\"Schedule?\"\n                            name=\"Scheduled\"\n                            value={isScheduled}\n                            onChange={() => {\n                                setIsScheduled(!isScheduled)\n                                }\n                            }\n                        />\n                    }\n                    label=\"Schedule?\"\n                    labelPlacement=\"start\"\n                />\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <DateTimePicker\n                        label=\"Scheduled For\"\n                        inputVariant=\"outlined\"\n                        minDate={Date.now}\n                        className={classes.inputs}\n                        disabled={!isScheduled}\n                        disablePast={true}\n                        // value={selectedDate}\n                        onChange={(e) => {\n                            console.log(e);\n                        }}\n                    />\n                </MuiPickersUtilsProvider> */}\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    disabled={!formFilled}\n                    onClick={sendMem}\n                >\n                    Mem It!\n                </Button>\n                <Typography variant=\"caption\" display=\"box\">\n                    {`${resMsg}`}\n                </Typography>\n            </FormControl>\n        </Card>\n      \n    </div>\n  );\n}\n\nexport default Form;\n","import { Card, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    a: {\n        color: 'black'\n    }\n}));\n\nconst Disclaimer = () => {\n\n    const classes = useStyles();\n\n    return(\n        <div className=\"App\">\n            <Card style={{ padding: 30, minWidth: 400, maxWidth: 400, marginBottom: 20 }}>\n                <Typography variant=\"body1\">\n                    This is not affiliated in any way with<a className={classes.a} href=\"https://mem.ai\">mem.ai</a>. We only use their API and we do not store your API Key whatsoever.\n                </Typography>\n            </Card>\n        </div>\n        \n    );\n}\n\nexport default Disclaimer;","import { Card, Typography } from '@material-ui/core';\n\nconst Message = () => {\n\n    let message = <Typography variant=\"body1\">\n            <i>Mobile Friendly</i>, <i>Error Handling</i> and <i>Scheduled For</i> features coming soon... &amp; <i>Chrome Extension</i> too.\n        </Typography>;\n\n    return(\n        <div className=\"App\">\n            <Card style={{ padding: 30, minWidth: 400, maxWidth: 400, marginBottom: 20, marginTop: 20 }}>\n                {message}\n            </Card>\n        </div>\n        \n    );\n}\n\nexport default Message;","import './App.css';\nimport Form from './components/form.js';\nimport Disclaimer from './components/disclaimer.js';\nimport Message from './components/message.js';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Disclaimer/>\n        <Form/>\n        <Message/>\n      </header>\n      <footer className=\"App-footer\">&copy; Copyright 2021 |\n        <a href=\"https://diegonunez.dev\">\n          Diego Nunez\n        </a>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}